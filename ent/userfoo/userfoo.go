// Code generated by entc, DO NOT EDIT.

package userfoo

const (
	// Label holds the string label denoting the userfoo type in the database.
	Label = "user_foo"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDummy holds the string denoting the dummy field in the database.
	FieldDummy = "dummy"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// Table holds the table name of the userfoo in the database.
	Table = "user_foos"
	// ParentTable is the table that holds the parent relation/edge. The primary key declared below.
	ParentTable = "user_foos"
	// ParentInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	ParentInverseTable = "users"
)

// Columns holds all SQL columns for userfoo fields.
var Columns = []string{
	FieldID,
	FieldDummy,
}

var (
	// ParentPrimaryKey and ParentColumn2 are the table columns denoting the
	// primary key for the parent relation (M2M).
	ParentPrimaryKey = []string{"user_id", "user_foo_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
